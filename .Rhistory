install.packages("quarto")
# Assign the value of 7 which is my lucky number to the variable 'my_lucky_number'
my_lucky_number <- 7
#Update the value of 'my_lucky_number'
my_lucky_number <- my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
reticulate::repl_python()
reticulate::repl_python()
remove.packages("reticulate")
install.packages("reticulate")
remove.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
reticulate::repl_python()
reticulate::repl_python()
heights_in_cm <- c(185,190, 178, 192, 188, 176, 180)
average <- mean(heights_in_cm)
cat("the average of heights:", average)
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots)
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots,\n)
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots,"\n")
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots,"\n")
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots)
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
use_python("C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12")
library(reticulate)
> use_python(C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12)
library(reticulate) use_python(C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12)
library(reticulate)use_python(C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12)
library(reticulate)
use_python(C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12)
library(reticulate)
use_python(C:\Users\huawei\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.12)
# Assign the value of 7 which is my lucky number to the variable 'my_lucky_number'
my_lucky_number <- 7
#Update the value of 'my_lucky_number'
my_lucky_number <- my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
reticulate::repl_python()
install_python(version = '<version>')
# Assign the value of 7 which is my lucky number to the variable 'my_lucky_number'
my_lucky_number <- 7
#Update the value of 'my_lucky_number'
my_lucky_number <- my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
library(reticulate)
use_python("C:/Program Files/Python 3.12/python.exe")
library(reticulate)
use_python("C:/Program Files/Python 3.12")
library(dslabs)
library(dslabs)
install.packages("dslabs")
library(dslabs)
data("na_example")
data("na_example")
library(dslabs)
library(dslabs)
library(dslabs)
library(dslabs)
library(dslabs)
library(dslabs)
x
x
x <- 1
x
# Gerekli paketi yükleyin (sadece bir kez yapmanız gerekir)
# install.packages("dslabs")
library(dslabs)
# na_example veri setini içe aktarın
data("na_example")
# Veri setinin içeriğini görüntüleyin
print(na_example)
# Veri setindeki NA değerlerini 0 ile değiştirin
na_example_no_na <- na_example
na_example_no_na[is.na(na_example_no_na)] <- 0
# Değiştirilmiş veri setini görüntüleyin
print(na_example_no_na)
# Orijinal veri setindeki toplam NA sayısını görüntüleyin
total_na_count <- sum(is.na(na_example))
cat("Toplam NA Sayısı (Orijinal Veri):", total_na_count, "\n")
# Değiştirilmiş veri setindeki toplam NA sayısını görüntüleyin
total_na_count_modified <- sum(is.na(na_example_no_na))
cat("Toplam NA Sayısı (Değiştirilmiş Veri):", total_na_count_modified, "\n")
library(dslabs)
data("na_example")
library(dslabs)
data("na_example")
na_example
library(dslabs)
data("na_example")
na_example
head(na_example)
library(dslabs)
data("na_example")
na_example
head(na_example)
sum(is.na(na_example))
library(dslabs)
data("na_example")
na_example
head(na_example)
sum(is.2(na_example))
is.na(na_example)
sum(is.na(na_example))
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots)
# Import the “na_example” data
library(dslabs)
data("na_example")
#Print
na_example
# Import the “na_example” data set
library(dslabs)
data("na_example")
#Print the data set
na_example
# Count the total number of NA
sum(is.na(na_example))
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example_no_na)] <- 0
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
sum(is.na(na_example_with_0))
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example_with_0)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
sum(is.na(na_example_with_0))
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
sum(is.na(na_example_with_0))
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
cat("total number of NA:", sum(is.na(na_example_with_0))
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
total_number_NA <- sum(is.na(na_example_with_0))
cat("TOTAL NUMBER OF NA :", total_number_NA )
# Import the “na_example” data set
library(dslabs)
data("na_example")
#Print the data set
na_example
# Count the total number of NA
total_number_NA1 <- sum(is.na(na_example))
cat("TOTAL NUMBER OF NA :", total_number_NA1 )
reticulate::repl_python()
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
quit
# Assign the value of 7 which is my lucky number to the variable 'my_lucky_number'
my_lucky_number <- 7
#Update the value of 'my_lucky_number'
my_lucky_number <- my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
reticulate::repl_python()
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
quit
heights_in_cm <- c(185,190, 178, 192, 188, 176, 180)
average <- mean(heights_in_cm)
cat("the average of heights:", average)
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.meanheights_in_cm)
# Print the value of variable
print("the average of heights:", average)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", rounde(average,4)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", rounde(average,4)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", rounde(average,4))
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", rounde(average,4))
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = rounde(np.mean(heights_in_cm,4)
# Print the value of variable
print("the average of heights:", average)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
quit
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots)
reticulate::repl_python()
list = [25, 36, 121,9]
square_roots = []
#Calculate square roots and add the list of them
for i in list:
square_roots.append(i**0.5)
#Print the list of square roots
print("square_roots:", square_roots)
# Import the “na_example” data set
library(dslabs)
data("na_example")
#Print the data set
na_example
# Count the total number of NA
total_number_NA1 <- sum(is.na(na_example))
cat("TOTAL NUMBER OF NA :", total_number_NA1 )
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
total_number_NA2 <- sum(is.na(na_example_with_0))
cat("TOTAL NUMBER OF NA :", total_number_NA2 )
# Import the “na_example” data set
library(dslabs)
data("na_example")
#Print the data set
na_example
# Count the total number of NA
total_number_NA1 <- sum(is.na(na_example))
cat("TOTAL NUMBER OF NA :", total_number_NA1 )
reticulate::repl_python()
list = [25, 36, 121,9]
square_roots = []
#Calculate square roots and add the list of them
for i in list:
square_roots.append(i**0.5)
#Print the list of square roots
print("square_roots:", square_roots)
quit
vector <- c(25, 36, 121,9)
#Calculate square roots of elements
square_roots <- sqrt(vector)
#Print the list of square roots
cat("square_roots:", square_roots)
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
# Create a list of heights in cm
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
# Calculate the average of the heights using np.mean()
average = np.mean(heights_in_cm)
# Print the value of the average
print("The average of heights is:", average)
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
quit
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
list = [25, 36, 121,9]
square_roots = []
#Calculate square roots and add the list of them
for i in list:
square_roots.append(i**0.5)
#Print the list of square roots
print("square_roots:", square_roots)
# Assign the value of 7 to the variable 'my_lucky_number'
my_lucky_number = 7
#Update the value of 'my_lucky_number'
my_lucky_number += 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
quit
# Assign the value of 7 which is my lucky number to the variable 'my_lucky_number'
my_lucky_number <- 7
#Update the value of 'my_lucky_number'
my_lucky_number <- my_lucky_number + 2
# Print the new value of variable 'my_lucky_number'
print(my_lucky_number)
heights_in_cm <- c(185,190, 178, 192, 188, 176, 180)
average <- mean(heights_in_cm)
cat("the average of heights:", average)
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
quit
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
# Create a list of heights in cm
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
# Calculate the average of the heights using np.mean()
average = np.mean(heights_in_cm)
# Print the value of the average to the console
print("The average of heights is:", average)
quit
reticulate::repl_python()
# Import numpy for using mean function
# Create a list of heights in cm
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
# Calculate the average of the heights using np.mean()
average = heights_in_cm
# Print the value of the average to the console
print("The average of heights is:", average)
quit
reticulate::repl_python()
# Import numpy for using mean function
import numpy as np
heights_in_cm = [185, 190, 178, 192, 188, 176, 180]
#Calculate of average of heights
average = np.mean(heights_in_cm)
# Print the value of variable
print("the average of heights:", average)
x <- 1
x
# Import the “na_example” data set
library(dslabs)
data("na_example")
#Print the data set
na_example
# Count the total number of NA
total_number_NA1 <- sum(is.na(na_example))
cat("TOTAL NUMBER OF NA :", total_number_NA1 )
# Create new variable for data set with 0
na_example_with_0 <- na_example
# Replace NAs with 0
na_example_with_0[is.na(na_example)] <- 0
# Print new data set with 0
na_example_with_0
# Count the total number of NA in new data set
total_number_NA2 <- sum(is.na(na_example_with_0))
cat("TOTAL NUMBER OF NA :", total_number_NA2 )
install.packages("thestats")
library(thestats)
data(thestats)
data(thestats)
install.packages("thestats")
install.packages("thestats")
library(thestats)
library(thestats)
data(thestats)
load("C:/Users/huawei/Downloads/depts_en.rda")
load("C:/Users/huawei/Desktop/depts_en.rda")
